

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Aug 24 18:51:04 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 12/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     008F                     	;# 
    99     0090                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0095                     	;# 
   107     0096                     	;# 
   108     0097                     	;# 
   109     0098                     	;# 
   110     0099                     	;# 
   111     009A                     	;# 
   112     009B                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     0105                     	;# 
   118     0107                     	;# 
   119     0108                     	;# 
   120     0109                     	;# 
   121     010C                     	;# 
   122     010C                     	;# 
   123     010D                     	;# 
   124     010E                     	;# 
   125     010F                     	;# 
   126     0185                     	;# 
   127     0187                     	;# 
   128     0188                     	;# 
   129     0189                     	;# 
   130     018C                     	;# 
   131     018D                     	;# 
   132     0000                     	;# 
   133     0001                     	;# 
   134     0002                     	;# 
   135     0003                     	;# 
   136     0004                     	;# 
   137     0005                     	;# 
   138     0006                     	;# 
   139     0007                     	;# 
   140     0008                     	;# 
   141     0009                     	;# 
   142     000A                     	;# 
   143     000B                     	;# 
   144     000C                     	;# 
   145     000D                     	;# 
   146     000E                     	;# 
   147     000E                     	;# 
   148     000F                     	;# 
   149     0010                     	;# 
   150     0011                     	;# 
   151     0012                     	;# 
   152     0013                     	;# 
   153     0014                     	;# 
   154     0015                     	;# 
   155     0015                     	;# 
   156     0016                     	;# 
   157     0017                     	;# 
   158     0018                     	;# 
   159     0019                     	;# 
   160     001A                     	;# 
   161     001B                     	;# 
   162     001B                     	;# 
   163     001C                     	;# 
   164     001D                     	;# 
   165     001E                     	;# 
   166     001F                     	;# 
   167     0081                     	;# 
   168     0085                     	;# 
   169     0086                     	;# 
   170     0087                     	;# 
   171     0088                     	;# 
   172     0089                     	;# 
   173     008C                     	;# 
   174     008D                     	;# 
   175     008E                     	;# 
   176     008F                     	;# 
   177     0090                     	;# 
   178     0091                     	;# 
   179     0092                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0094                     	;# 
   184     0095                     	;# 
   185     0096                     	;# 
   186     0097                     	;# 
   187     0098                     	;# 
   188     0099                     	;# 
   189     009A                     	;# 
   190     009B                     	;# 
   191     009C                     	;# 
   192     009D                     	;# 
   193     009E                     	;# 
   194     009F                     	;# 
   195     0105                     	;# 
   196     0107                     	;# 
   197     0108                     	;# 
   198     0109                     	;# 
   199     010C                     	;# 
   200     010C                     	;# 
   201     010D                     	;# 
   202     010E                     	;# 
   203     010F                     	;# 
   204     0185                     	;# 
   205     0187                     	;# 
   206     0188                     	;# 
   207     0189                     	;# 
   208     018C                     	;# 
   209     018D                     	;# 
   210     0000                     	;# 
   211     0001                     	;# 
   212     0002                     	;# 
   213     0003                     	;# 
   214     0004                     	;# 
   215     0005                     	;# 
   216     0006                     	;# 
   217     0007                     	;# 
   218     0008                     	;# 
   219     0009                     	;# 
   220     000A                     	;# 
   221     000B                     	;# 
   222     000C                     	;# 
   223     000D                     	;# 
   224     000E                     	;# 
   225     000E                     	;# 
   226     000F                     	;# 
   227     0010                     	;# 
   228     0011                     	;# 
   229     0012                     	;# 
   230     0013                     	;# 
   231     0014                     	;# 
   232     0015                     	;# 
   233     0015                     	;# 
   234     0016                     	;# 
   235     0017                     	;# 
   236     0018                     	;# 
   237     0019                     	;# 
   238     001A                     	;# 
   239     001B                     	;# 
   240     001B                     	;# 
   241     001C                     	;# 
   242     001D                     	;# 
   243     001E                     	;# 
   244     001F                     	;# 
   245     0081                     	;# 
   246     0085                     	;# 
   247     0086                     	;# 
   248     0087                     	;# 
   249     0088                     	;# 
   250     0089                     	;# 
   251     008C                     	;# 
   252     008D                     	;# 
   253     008E                     	;# 
   254     008F                     	;# 
   255     0090                     	;# 
   256     0091                     	;# 
   257     0092                     	;# 
   258     0093                     	;# 
   259     0093                     	;# 
   260     0093                     	;# 
   261     0094                     	;# 
   262     0095                     	;# 
   263     0096                     	;# 
   264     0097                     	;# 
   265     0098                     	;# 
   266     0099                     	;# 
   267     009A                     	;# 
   268     009B                     	;# 
   269     009C                     	;# 
   270     009D                     	;# 
   271     009E                     	;# 
   272     009F                     	;# 
   273     0105                     	;# 
   274     0107                     	;# 
   275     0108                     	;# 
   276     0109                     	;# 
   277     010C                     	;# 
   278     010C                     	;# 
   279     010D                     	;# 
   280     010E                     	;# 
   281     010F                     	;# 
   282     0185                     	;# 
   283     0187                     	;# 
   284     0188                     	;# 
   285     0189                     	;# 
   286     018C                     	;# 
   287     018D                     	;# 
   288     0001                     _TMR0	set	1
   289     000B                     _INTCONbits	set	11
   290     0081                     _OPTION_REG	set	129
   291                           
   292                           	psect	cinit
   293     000F                     start_initialization:	
   294                           ; #config settings
   295                           
   296     000F                     __initialization:
   297                           
   298                           ; Clear objects allocated to COMMON
   299     000F  01F9               	clrf	__pbssCOMMON& (0+127)
   300     0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   301                           
   302                           ; Clear objects allocated to BANK0
   303     0011  1283               	bcf	3,5	;RP0=0, select bank0
   304     0012  1303               	bcf	3,6	;RP1=0, select bank0
   305     0013  01A0               	clrf	__pbssBANK0& (0+127)
   306     0014  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   307     0015                     end_of_initialization:	
   308                           ;End of C runtime variable initialization code
   309                           
   310     0015                     __end_of__initialization:
   311     0015  0183               	clrf	3
   312     0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   313                           
   314                           	psect	bssCOMMON
   315     0079                     __pbssCOMMON:
   316     0079                     _timerTriggered:
   317     0079                     	ds	1
   318     007A                     _secondsPassed:
   319     007A                     	ds	1
   320                           
   321                           	psect	bssBANK0
   322     0020                     __pbssBANK0:
   323     0020                     _timerCnt:
   324     0020                     	ds	2
   325                           
   326                           	psect	cstackCOMMON
   327     0070                     __pcstackCOMMON:
   328     0070                     ?_setup_timer0:
   329     0070                     ?_enable_interrupts:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ?_interruptHandler:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ??_interruptHandler:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     ?_main:	
   339                           ; 1 bytes @ 0x0
   340                           
   341                           
   342                           ; 1 bytes @ 0x0
   343     0070                     	ds	2
   344     0072                     ??_setup_timer0:
   345     0072                     ??_enable_interrupts:	
   346                           ; 1 bytes @ 0x2
   347                           
   348     0072                     ?_configurePinDirection:	
   349                           ; 1 bytes @ 0x2
   350                           
   351     0072                     ?_setPinOutput:	
   352                           ; 1 bytes @ 0x2
   353                           
   354     0072                     ?_togglePin:	
   355                           ; 1 bytes @ 0x2
   356                           
   357     0072                     configurePinDirection@pin:	
   358                           ; 1 bytes @ 0x2
   359                           
   360     0072                     setPinOutput@pin:	
   361                           ; 1 bytes @ 0x2
   362                           
   363     0072                     togglePin@pin:	
   364                           ; 1 bytes @ 0x2
   365                           
   366                           
   367                           ; 1 bytes @ 0x2
   368     0072                     	ds	1
   369     0073                     ??_togglePin:
   370     0073                     configurePinDirection@direction:	
   371                           ; 1 bytes @ 0x3
   372                           
   373     0073                     setPinOutput@level:	
   374                           ; 1 bytes @ 0x3
   375                           
   376                           
   377                           ; 1 bytes @ 0x3
   378     0073                     	ds	1
   379     0074                     ??_configurePinDirection:
   380     0074                     ??_setPinOutput:	
   381                           ; 1 bytes @ 0x4
   382                           
   383                           
   384                           ; 1 bytes @ 0x4
   385     0074                     	ds	2
   386     0076                     togglePin@port:
   387                           
   388                           ; 1 bytes @ 0x6
   389     0076                     	ds	1
   390     0077                     configurePinDirection@port:
   391     0077                     setPinOutput@port:	
   392                           ; 1 bytes @ 0x7
   393                           
   394     0077                     togglePin@bitmask:	
   395                           ; 1 bytes @ 0x7
   396                           
   397                           
   398                           ; 1 bytes @ 0x7
   399     0077                     	ds	1
   400     0078                     configurePinDirection@bitmask:
   401     0078                     setPinOutput@bitmask:	
   402                           ; 1 bytes @ 0x8
   403                           
   404                           
   405                           ; 1 bytes @ 0x8
   406     0078                     	ds	1
   407     0079                     ??_main:
   408                           
   409                           	psect	cstackBANK0
   410     0022                     __pcstackBANK0:	
   411                           ; 1 bytes @ 0x9
   412                           
   413     0022                     main@timerPin:
   414                           
   415                           ; 1 bytes @ 0x0
   416     0022                     	ds	1
   417     0023                     main@port:
   418                           
   419                           ; 1 bytes @ 0x1
   420     0023                     	ds	1
   421                           
   422                           	psect	maintext
   423     0019                     __pmaintext:	
   424 ;;
   425 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   426 ;;
   427 ;; *************** function _main *****************
   428 ;; Defined at:
   429 ;;		line 46 in file "main.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;  port            1    1[BANK0 ] enum E1420
   434 ;;  timerPin        1    0[BANK0 ] unsigned char 
   435 ;;  ledPin          1    0        unsigned char 
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : B00/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   445 ;;      Params:         0       0       0       0       0
   446 ;;      Locals:         0       2       0       0       0
   447 ;;      Temps:          0       0       0       0       0
   448 ;;      Totals:         0       2       0       0       0
   449 ;;Total ram usage:        2 bytes
   450 ;; Hardware stack levels required when called: 2
   451 ;; This function calls:
   452 ;;		_configurePinDirection
   453 ;;		_enable_interrupts
   454 ;;		_setPinOutput
   455 ;;		_setup_timer0
   456 ;;		_togglePin
   457 ;; This function is called by:
   458 ;;		Startup code after reset
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462     0019                     _main:	
   463                           ;psect for function _main
   464                           
   465     0019                     l753:	
   466                           ;incstack = 0
   467                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   468                           
   469                           
   470                           ;main.c: 47:     port_t port = PortA;
   471     0019  1283               	bcf	3,5	;RP0=0, select bank0
   472     001A  1303               	bcf	3,6	;RP1=0, select bank0
   473     001B  01A3               	clrf	main@port
   474     001C                     l755:
   475                           
   476                           ;main.c: 50:     uint8_t timerPin = 1;
   477     001C  01A2               	clrf	main@timerPin
   478     001D  0AA2               	incf	main@timerPin,f
   479     001E                     l757:
   480                           
   481                           ;main.c: 52:     setup_timer0();
   482     001E  120A  118A  20FD  120A  118A  	fcall	_setup_timer0
   483     0023                     l759:
   484                           
   485                           ;main.c: 53:     enable_interrupts();
   486     0023  120A  118A  210B  120A  118A  	fcall	_enable_interrupts
   487     0028                     l761:
   488                           
   489                           ;main.c: 55:     configurePinDirection(port, ledPin, 0x01);
   490     0028  01F2               	clrf	configurePinDirection@pin
   491     0029  01F3               	clrf	configurePinDirection@direction
   492     002A  0AF3               	incf	configurePinDirection@direction,f
   493     002B  3000               	movlw	0
   494     002C  120A  118A  209D  120A  118A  	fcall	_configurePinDirection
   495     0031                     l763:
   496                           
   497                           ;main.c: 56:     configurePinDirection(port, timerPin, 0x01);
   498     0031  01F2               	clrf	configurePinDirection@pin
   499     0032  0AF2               	incf	configurePinDirection@pin,f
   500     0033  01F3               	clrf	configurePinDirection@direction
   501     0034  0AF3               	incf	configurePinDirection@direction,f
   502     0035  3000               	movlw	0
   503     0036  120A  118A  209D  120A  118A  	fcall	_configurePinDirection
   504     003B                     l765:
   505                           
   506                           ;main.c: 58:     setPinOutput(port, ledPin, 0x01);
   507     003B  01F2               	clrf	setPinOutput@pin
   508     003C  01F3               	clrf	setPinOutput@level
   509     003D  0AF3               	incf	setPinOutput@level,f
   510     003E  3000               	movlw	0
   511     003F  120A  118A  2069  120A  118A  	fcall	_setPinOutput
   512     0044                     l767:
   513                           
   514                           ;main.c: 61:         if(timerTriggered == 0x01) {
   515     0044  0379               	decf	_timerTriggered,w	;volatile
   516     0045  1D03               	btfss	3,2
   517     0046  2848               	goto	u151
   518     0047  2849               	goto	u150
   519     0048                     u151:
   520     0048  2844               	goto	l767
   521     0049                     u150:
   522     0049                     l769:
   523                           
   524                           ;main.c: 62:             timerTriggered = 0x00;
   525     0049  01F9               	clrf	_timerTriggered	;volatile
   526     004A                     l771:
   527                           
   528                           ;main.c: 63:             timerCnt++;
   529     004A  3001               	movlw	1
   530     004B  1283               	bcf	3,5	;RP0=0, select bank0
   531     004C  1303               	bcf	3,6	;RP1=0, select bank0
   532     004D  07A0               	addwf	_timerCnt,f	;volatile
   533     004E  1803               	skipnc
   534     004F  0AA1               	incf	_timerCnt+1,f	;volatile
   535     0050  3000               	movlw	0
   536     0051  07A1               	addwf	_timerCnt+1,f	;volatile
   537     0052                     l773:
   538                           
   539                           ;main.c: 65:             if(timerCnt == 9008U) {
   540     0052  3030               	movlw	48
   541     0053  0620               	xorwf	_timerCnt,w	;volatile
   542     0054  3023               	movlw	35
   543     0055  1903               	skipnz
   544     0056  0621               	xorwf	_timerCnt+1,w	;volatile
   545     0057  1D03               	btfss	3,2
   546     0058  285A               	goto	u161
   547     0059  285B               	goto	u160
   548     005A                     u161:
   549     005A  2844               	goto	l767
   550     005B                     u160:
   551     005B                     l775:
   552                           
   553                           ;main.c: 66:                 timerCnt = 0;
   554     005B  01A0               	clrf	_timerCnt	;volatile
   555     005C  01A1               	clrf	_timerCnt+1	;volatile
   556     005D                     l777:
   557                           
   558                           ;main.c: 68:                 togglePin(port, timerPin);
   559     005D  0822               	movf	main@timerPin,w
   560     005E  00F2               	movwf	togglePin@pin
   561     005F  0823               	movf	main@port,w
   562     0060  120A  118A  20D1  120A  118A  	fcall	_togglePin
   563     0065  2844               	goto	l767
   564     0066  120A  118A  280C   	ljmp	start
   565     0069                     __end_of_main:
   566                           
   567                           	psect	text1
   568     00D1                     __ptext1:	
   569 ;; *************** function _togglePin *****************
   570 ;; Defined at:
   571 ;;		line 41 in file "driver_lib.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;  port            1    wreg     enum E1420
   574 ;;  pin             1    2[COMMON] unsigned char 
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  port            1    6[COMMON] enum E1420
   577 ;;  bitmask         1    7[COMMON] unsigned char 
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   587 ;;      Params:         1       0       0       0       0
   588 ;;      Locals:         2       0       0       0       0
   589 ;;      Temps:          3       0       0       0       0
   590 ;;      Totals:         6       0       0       0       0
   591 ;;Total ram usage:        6 bytes
   592 ;; Hardware stack levels used: 1
   593 ;; Hardware stack levels required when called: 1
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601     00D1                     _togglePin:	
   602                           ;psect for function _togglePin
   603                           
   604                           
   605                           ;incstack = 0
   606                           ; Regs used in _togglePin: [wreg-fsr0h+status,2+status,0]
   607                           ;togglePin@port stored from wreg
   608     00D1  00F6               	movwf	togglePin@port
   609     00D2                     l749:
   610                           
   611                           ;driver_lib.c: 42:     uint8_t bitmask = (0x01 << pin);
   612     00D2  3001               	movlw	1
   613     00D3  00F3               	movwf	??_togglePin
   614     00D4  0A72               	incf	togglePin@pin,w
   615     00D5  28D8               	goto	u144
   616     00D6                     u145:
   617     00D6  1003               	clrc
   618     00D7  0DF3               	rlf	??_togglePin,f
   619     00D8                     u144:
   620     00D8  3EFF               	addlw	-1
   621     00D9  1D03               	skipz
   622     00DA  28D6               	goto	u145
   623     00DB  0873               	movf	??_togglePin,w
   624     00DC  00F7               	movwf	togglePin@bitmask
   625     00DD                     l751:
   626                           
   627                           ;driver_lib.c: 44:     *((volatile uint8_t*) 0x05 + port) ^= bitmask;
   628     00DD  0877               	movf	togglePin@bitmask,w
   629     00DE  00F3               	movwf	??_togglePin
   630     00DF  3005               	movlw	5
   631     00E0  0776               	addwf	togglePin@port,w
   632     00E1  00F4               	movwf	??_togglePin+1
   633     00E2  01F5               	clrf	??_togglePin+2
   634     00E3  0DF5               	rlf	??_togglePin+2,f
   635     00E4  0874               	movf	??_togglePin+1,w
   636     00E5  0084               	movwf	4
   637     00E6  1783               	bsf	3,7
   638     00E7  1C75               	btfss	??_togglePin+2,0
   639     00E8  1383               	bcf	3,7
   640     00E9  0873               	movf	??_togglePin,w
   641     00EA  0680               	xorwf	0,f
   642     00EB                     l59:
   643     00EB  0008               	return
   644     00EC                     __end_of_togglePin:
   645                           
   646                           	psect	text2
   647     00FD                     __ptext2:	
   648 ;; *************** function _setup_timer0 *****************
   649 ;; Defined at:
   650 ;;		line 47 in file "driver_lib.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, status,2, status,0
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   664 ;;      Params:         0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0
   666 ;;      Temps:          1       0       0       0       0
   667 ;;      Totals:         1       0       0       0       0
   668 ;;Total ram usage:        1 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; Hardware stack levels required when called: 1
   671 ;; This function calls:
   672 ;;		Nothing
   673 ;; This function is called by:
   674 ;;		_main
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678     00FD                     _setup_timer0:	
   679                           ;psect for function _setup_timer0
   680                           
   681     00FD                     l725:	
   682                           ;incstack = 0
   683                           ; Regs used in _setup_timer0: [wreg+status,2+status,0]
   684                           
   685                           
   686                           ;driver_lib.c: 48:     OPTION_REG &= ~0b00100000;
   687     00FD  30DF               	movlw	223
   688     00FE  00F2               	movwf	??_setup_timer0
   689     00FF  0872               	movf	??_setup_timer0,w
   690     0100  1683               	bsf	3,5	;RP0=1, select bank1
   691     0101  1303               	bcf	3,6	;RP1=0, select bank1
   692     0102  0581               	andwf	1,f	;volatile
   693                           
   694                           ;driver_lib.c: 49:     OPTION_REG |= 0b00000111;
   695     0103  3007               	movlw	7
   696     0104  00F2               	movwf	??_setup_timer0
   697     0105  0872               	movf	??_setup_timer0,w
   698     0106  0481               	iorwf	1,f	;volatile
   699     0107                     l727:
   700                           
   701                           ;driver_lib.c: 50:     TMR0 = 0;
   702     0107  1283               	bcf	3,5	;RP0=0, select bank0
   703     0108  1303               	bcf	3,6	;RP1=0, select bank0
   704     0109  0181               	clrf	1	;volatile
   705     010A                     l62:
   706     010A  0008               	return
   707     010B                     __end_of_setup_timer0:
   708                           
   709                           	psect	text3
   710     0069                     __ptext3:	
   711 ;; *************** function _setPinOutput *****************
   712 ;; Defined at:
   713 ;;		line 29 in file "driver_lib.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  port            1    wreg     enum E1420
   716 ;;  pin             1    2[COMMON] unsigned char 
   717 ;;  level           1    3[COMMON] unsigned char 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  port            1    7[COMMON] enum E1420
   720 ;;  bitmask         1    8[COMMON] unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         2       0       0       0       0
   731 ;;      Locals:         2       0       0       0       0
   732 ;;      Temps:          3       0       0       0       0
   733 ;;      Totals:         7       0       0       0       0
   734 ;;Total ram usage:        7 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; Hardware stack levels required when called: 1
   737 ;; This function calls:
   738 ;;		Nothing
   739 ;; This function is called by:
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744     0069                     _setPinOutput:	
   745                           ;psect for function _setPinOutput
   746                           
   747                           
   748                           ;incstack = 0
   749                           ; Regs used in _setPinOutput: [wreg-fsr0h+status,2+status,0]
   750                           ;setPinOutput@port stored from wreg
   751     0069  00F7               	movwf	setPinOutput@port
   752     006A                     l741:
   753                           
   754                           ;driver_lib.c: 30:     uint8_t bitmask = (0x01 << pin);
   755     006A  3001               	movlw	1
   756     006B  00F4               	movwf	??_setPinOutput
   757     006C  0A72               	incf	setPinOutput@pin,w
   758     006D  2870               	goto	u134
   759     006E                     u135:
   760     006E  1003               	clrc
   761     006F  0DF4               	rlf	??_setPinOutput,f
   762     0070                     u134:
   763     0070  3EFF               	addlw	-1
   764     0071  1D03               	skipz
   765     0072  286E               	goto	u135
   766     0073  0874               	movf	??_setPinOutput,w
   767     0074  00F8               	movwf	setPinOutput@bitmask
   768                           
   769                           ;driver_lib.c: 32:     switch(level) {
   770     0075  2894               	goto	l747
   771     0076                     l743:
   772                           
   773                           ;driver_lib.c: 34:             *((volatile uint8_t*) 0x05 + port) |= bitmask;
   774     0076  0878               	movf	setPinOutput@bitmask,w
   775     0077  00F4               	movwf	??_setPinOutput
   776     0078  3005               	movlw	5
   777     0079  0777               	addwf	setPinOutput@port,w
   778     007A  00F5               	movwf	??_setPinOutput+1
   779     007B  01F6               	clrf	??_setPinOutput+2
   780     007C  0DF6               	rlf	??_setPinOutput+2,f
   781     007D  0875               	movf	??_setPinOutput+1,w
   782     007E  0084               	movwf	4
   783     007F  1783               	bsf	3,7
   784     0080  1C76               	btfss	??_setPinOutput+2,0
   785     0081  1383               	bcf	3,7
   786     0082  0874               	movf	??_setPinOutput,w
   787     0083  0480               	iorwf	0,f
   788                           
   789                           ;driver_lib.c: 35:             break;
   790     0084  289C               	goto	l56
   791     0085                     l745:
   792                           
   793                           ;driver_lib.c: 37:             *((volatile uint8_t*) 0x05 + port) &= ~bitmask;
   794     0085  0978               	comf	setPinOutput@bitmask,w
   795     0086  00F4               	movwf	??_setPinOutput
   796     0087  3005               	movlw	5
   797     0088  0777               	addwf	setPinOutput@port,w
   798     0089  00F5               	movwf	??_setPinOutput+1
   799     008A  01F6               	clrf	??_setPinOutput+2
   800     008B  0DF6               	rlf	??_setPinOutput+2,f
   801     008C  0875               	movf	??_setPinOutput+1,w
   802     008D  0084               	movwf	4
   803     008E  1783               	bsf	3,7
   804     008F  1C76               	btfss	??_setPinOutput+2,0
   805     0090  1383               	bcf	3,7
   806     0091  0874               	movf	??_setPinOutput,w
   807     0092  0580               	andwf	0,f
   808                           
   809                           ;driver_lib.c: 38:     }
   810     0093  289C               	goto	l56
   811     0094                     l747:
   812     0094  0873               	movf	setPinOutput@level,w
   813                           
   814                           ; Switch size 1, requested type "simple"
   815                           ; Number of cases is 2, Range of values is 0 to 1
   816                           ; switch strategies available:
   817                           ; Name         Instructions Cycles
   818                           ; simple_byte            7     4 (average)
   819                           ; direct_byte           14     8 (fixed)
   820                           ; jumptable            260     6 (fixed)
   821                           ;	Chosen strategy is simple_byte
   822     0095  3A00               	xorlw	0	; case 0
   823     0096  1903               	skipnz
   824     0097  2885               	goto	l745
   825     0098  3A01               	xorlw	1	; case 1
   826     0099  1903               	skipnz
   827     009A  2876               	goto	l743
   828     009B  289C               	goto	l56
   829     009C                     l56:
   830     009C  0008               	return
   831     009D                     __end_of_setPinOutput:
   832                           
   833                           	psect	text4
   834     010B                     __ptext4:	
   835 ;; *************** function _enable_interrupts *****************
   836 ;; Defined at:
   837 ;;		line 53 in file "driver_lib.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;		None
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		None
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         0       0       0       0       0
   852 ;;      Locals:         0       0       0       0       0
   853 ;;      Temps:          0       0       0       0       0
   854 ;;      Totals:         0       0       0       0       0
   855 ;;Total ram usage:        0 bytes
   856 ;; Hardware stack levels used: 1
   857 ;; Hardware stack levels required when called: 1
   858 ;; This function calls:
   859 ;;		Nothing
   860 ;; This function is called by:
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865     010B                     _enable_interrupts:	
   866                           ;psect for function _enable_interrupts
   867                           
   868     010B                     l729:	
   869                           ;incstack = 0
   870                           ; Regs used in _enable_interrupts: []
   871                           
   872                           
   873                           ;driver_lib.c: 54:     INTCONbits.TMR0IE = 1;
   874     010B  168B               	bsf	11,5	;volatile
   875                           
   876                           ;driver_lib.c: 55:     INTCONbits.GIE = 1;
   877     010C  178B               	bsf	11,7	;volatile
   878     010D                     l65:
   879     010D  0008               	return
   880     010E                     __end_of_enable_interrupts:
   881                           
   882                           	psect	text5
   883     009D                     __ptext5:	
   884 ;; *************** function _configurePinDirection *****************
   885 ;; Defined at:
   886 ;;		line 16 in file "driver_lib.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  port            1    wreg     enum E1420
   889 ;;  pin             1    2[COMMON] unsigned char 
   890 ;;  direction       1    3[COMMON] unsigned char 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  port            1    7[COMMON] enum E1420
   893 ;;  bitmask         1    8[COMMON] unsigned char 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         2       0       0       0       0
   904 ;;      Locals:         2       0       0       0       0
   905 ;;      Temps:          3       0       0       0       0
   906 ;;      Totals:         7       0       0       0       0
   907 ;;Total ram usage:        7 bytes
   908 ;; Hardware stack levels used: 1
   909 ;; Hardware stack levels required when called: 1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917     009D                     _configurePinDirection:	
   918                           ;psect for function _configurePinDirection
   919                           
   920                           
   921                           ;incstack = 0
   922                           ; Regs used in _configurePinDirection: [wreg-fsr0h+status,2+status,0]
   923                           ;configurePinDirection@port stored from wreg
   924     009D  00F7               	movwf	configurePinDirection@port
   925     009E                     l731:
   926                           
   927                           ;driver_lib.c: 17:     uint8_t bitmask = (0x01 << pin);
   928     009E  3001               	movlw	1
   929     009F  00F4               	movwf	??_configurePinDirection
   930     00A0  0A72               	incf	configurePinDirection@pin,w
   931     00A1  28A4               	goto	u124
   932     00A2                     u125:
   933     00A2  1003               	clrc
   934     00A3  0DF4               	rlf	??_configurePinDirection,f
   935     00A4                     u124:
   936     00A4  3EFF               	addlw	-1
   937     00A5  1D03               	skipz
   938     00A6  28A2               	goto	u125
   939     00A7  0874               	movf	??_configurePinDirection,w
   940     00A8  00F8               	movwf	configurePinDirection@bitmask
   941                           
   942                           ;driver_lib.c: 19:     switch(direction) {
   943     00A9  28C8               	goto	l739
   944     00AA                     l733:
   945                           
   946                           ;driver_lib.c: 21:             *((volatile uint8_t*) 0x85 + port) |= bitmask;
   947     00AA  0878               	movf	configurePinDirection@bitmask,w
   948     00AB  00F4               	movwf	??_configurePinDirection
   949     00AC  3085               	movlw	133
   950     00AD  0777               	addwf	configurePinDirection@port,w
   951     00AE  00F5               	movwf	??_configurePinDirection+1
   952     00AF  01F6               	clrf	??_configurePinDirection+2
   953     00B0  0DF6               	rlf	??_configurePinDirection+2,f
   954     00B1  0875               	movf	??_configurePinDirection+1,w
   955     00B2  0084               	movwf	4
   956     00B3  1783               	bsf	3,7
   957     00B4  1C76               	btfss	??_configurePinDirection+2,0
   958     00B5  1383               	bcf	3,7
   959     00B6  0874               	movf	??_configurePinDirection,w
   960     00B7  0480               	iorwf	0,f
   961                           
   962                           ;driver_lib.c: 22:             break;
   963     00B8  28D0               	goto	l49
   964     00B9                     l735:
   965                           
   966                           ;driver_lib.c: 24:             *((volatile uint8_t*) 0x85 + port) &= ~bitmask;
   967     00B9  0978               	comf	configurePinDirection@bitmask,w
   968     00BA  00F4               	movwf	??_configurePinDirection
   969     00BB  3085               	movlw	133
   970     00BC  0777               	addwf	configurePinDirection@port,w
   971     00BD  00F5               	movwf	??_configurePinDirection+1
   972     00BE  01F6               	clrf	??_configurePinDirection+2
   973     00BF  0DF6               	rlf	??_configurePinDirection+2,f
   974     00C0  0875               	movf	??_configurePinDirection+1,w
   975     00C1  0084               	movwf	4
   976     00C2  1783               	bsf	3,7
   977     00C3  1C76               	btfss	??_configurePinDirection+2,0
   978     00C4  1383               	bcf	3,7
   979     00C5  0874               	movf	??_configurePinDirection,w
   980     00C6  0580               	andwf	0,f
   981                           
   982                           ;driver_lib.c: 25:             break;
   983     00C7  28D0               	goto	l49
   984     00C8                     l739:
   985     00C8  0873               	movf	configurePinDirection@direction,w
   986                           
   987                           ; Switch size 1, requested type "simple"
   988                           ; Number of cases is 2, Range of values is 0 to 1
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte            7     4 (average)
   992                           ; direct_byte           14     8 (fixed)
   993                           ; jumptable            260     6 (fixed)
   994                           ;	Chosen strategy is simple_byte
   995     00C9  3A00               	xorlw	0	; case 0
   996     00CA  1903               	skipnz
   997     00CB  28AA               	goto	l733
   998     00CC  3A01               	xorlw	1	; case 1
   999     00CD  1903               	skipnz
  1000     00CE  28B9               	goto	l735
  1001     00CF  28D0               	goto	l49
  1002     00D0                     l49:
  1003     00D0  0008               	return
  1004     00D1                     __end_of_configurePinDirection:
  1005                           
  1006                           	psect	text6
  1007     00EC                     __ptext6:	
  1008 ;; *************** function _interruptHandler *****************
  1009 ;; Defined at:
  1010 ;;		line 36 in file "main.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;		None
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1024 ;;      Params:         0       0       0       0       0
  1025 ;;      Locals:         0       0       0       0       0
  1026 ;;      Temps:          2       0       0       0       0
  1027 ;;      Totals:         2       0       0       0       0
  1028 ;;Total ram usage:        2 bytes
  1029 ;; Hardware stack levels used: 1
  1030 ;; This function calls:
  1031 ;;		Nothing
  1032 ;; This function is called by:
  1033 ;;		Interrupt level 1
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037     00EC                     _interruptHandler:	
  1038                           ;psect for function _interruptHandler
  1039                           
  1040     00EC                     i1l637:
  1041                           
  1042                           ;main.c: 37:     if (INTCONbits.TMR0IF) {
  1043     00EC  1D0B               	btfss	11,2	;volatile
  1044     00ED  28EF               	goto	u4_21
  1045     00EE  28F0               	goto	u4_20
  1046     00EF                     u4_21:
  1047     00EF  28F6               	goto	i1l26
  1048     00F0                     u4_20:
  1049     00F0                     i1l639:
  1050                           
  1051                           ;main.c: 38:         INTCONbits.TMR0IF = 0;
  1052     00F0  110B               	bcf	11,2	;volatile
  1053     00F1                     i1l641:
  1054                           
  1055                           ;main.c: 40:         timerTriggered = 0x01;
  1056     00F1  3001               	movlw	1
  1057     00F2  00F9               	movwf	_timerTriggered	;volatile
  1058     00F3                     i1l643:
  1059                           
  1060                           ;main.c: 42:         TMR0 = 0;
  1061     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1062     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1063     00F5  0181               	clrf	1	;volatile
  1064     00F6                     i1l26:
  1065     00F6  0871               	movf	??_interruptHandler+1,w
  1066     00F7  008A               	movwf	10
  1067     00F8  0E70               	swapf	??_interruptHandler,w
  1068     00F9  0083               	movwf	3
  1069     00FA  0EFE               	swapf	btemp,f
  1070     00FB  0E7E               	swapf	btemp,w
  1071     00FC  0009               	retfie
  1072     00FD                     __end_of_interruptHandler:
  1073     007E                     btemp	set	126	;btemp
  1074     007E                     wtemp0	set	126
  1075                           
  1076                           	psect	intentry
  1077     0004                     __pintentry:	
  1078                           ;incstack = 0
  1079                           ; Regs used in _interruptHandler: [wreg+status,2]
  1080                           
  1081     0004                     interrupt_function:
  1082     007E                     saved_w	set	btemp
  1083     0004  00FE               	movwf	btemp
  1084     0005  0E03               	swapf	3,w
  1085     0006  00F0               	movwf	??_interruptHandler
  1086     0007  080A               	movf	10,w
  1087     0008  00F1               	movwf	??_interruptHandler+1
  1088     0009  120A  118A  28EC   	ljmp	_interruptHandler
  1089                           
  1090                           	psect	config
  1091                           
  1092                           ;Config register CONFIG1 @ 0x2007
  1093                           ;	Oscillator Selection bits
  1094                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1095                           ;	Watchdog Timer Enable bit
  1096                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1097                           ;	Power-up Timer Enable bit
  1098                           ;	PWRTE = OFF, PWRT disabled
  1099                           ;	RE3/MCLR pin function select bit
  1100                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1101                           ;	Code Protection bit
  1102                           ;	CP = OFF, Program memory code protection is disabled
  1103                           ;	Data Code Protection bit
  1104                           ;	CPD = OFF, Data memory code protection is disabled
  1105                           ;	Brown Out Reset Selection bits
  1106                           ;	BOREN = ON, BOR enabled
  1107                           ;	Internal External Switchover bit
  1108                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1109                           ;	Fail-Safe Clock Monitor Enabled bit
  1110                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1111                           ;	Low Voltage Programming Enable bit
  1112                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1113                           ;	In-Circuit Debugger Mode bit
  1114                           ;	DEBUG = 0x1, unprogrammed default
  1115     2007                     	org	8199
  1116     2007  3FF5               	dw	16373
  1117                           
  1118                           ;Config register CONFIG2 @ 0x2008
  1119                           ;	Brown-out Reset Selection bit
  1120                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1121                           ;	Flash Program Memory Self Write Enable bits
  1122                           ;	WRT = OFF, Write protection off
  1123     2008                     	org	8200
  1124     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      2       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_configurePinDirection
    _main->_setPinOutput

Critical Paths under _interruptHandler in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1361
                                              0 BANK0      2     2      0
              _configurePinDirection
                  _enable_interrupts
                       _setPinOutput
                       _setup_timer0
                          _togglePin
 ---------------------------------------------------------------------------------
 (1) _togglePin                                            6     5      1     186
                                              2 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (1) _setup_timer0                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setPinOutput                                         7     5      2     369
                                              2 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurePinDirection                                7     5      2     549
                                              2 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _interruptHandler                                     2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configurePinDirection
   _enable_interrupts
   _setPinOutput
   _setup_timer0
   _togglePin

 _interruptHandler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Aug 24 18:51:04 2024

  configurePinDirection@bitmask 0078                              l62 010A                              l56 009C  
                            l49 00D0                              l65 010D                              l59 00EB  
                           l731 009E                             l733 00AA                             l741 006A  
                           l725 00FD                             l735 00B9                             l743 0076  
                           l727 0107                             l751 00DD                             l729 010B  
                           l745 0085                             l761 0028                             l753 0019  
                           l739 00C8                             l747 0094                             l771 004A  
                           l763 0031                             l755 001C                             l749 00D2  
                           l773 0052                             l765 003B                             l757 001E  
                           l775 005B                             l767 0044                             l759 0023  
                           l777 005D                             l769 0049                             u124 00A4  
                           u125 00A2                             u134 0070                             u150 0049  
                           u135 006E                             u151 0048                             u144 00D8  
                           u160 005B                             u145 00D6                             u161 005A  
                           fsr0 0004                             indf 0000                            i1l26 00F6  
                          _TMR0 0001                            u4_20 00F0                            u4_21 00EF  
                          _main 0019        __end_of_interruptHandler 00FD                            btemp 007E  
                          start 000C                           ?_main 0070                    togglePin@pin 0072  
                         i1l641 00F1                           i1l643 00F3                           i1l637 00EC  
                         i1l639 00F0                    main@timerPin 0022                           pclath 000A  
                         status 0003                           wtemp0 007E                 __initialization 000F  
                  __end_of_main 0069                          ??_main 0079                   togglePin@port 0076  
                        saved_w 007E         ??_configurePinDirection 0074         __end_of__initialization 0015  
                __pcstackCOMMON 0070                      __pbssBANK0 0020               ?_interruptHandler 0070  
                 ?_setPinOutput 0072              ??_interruptHandler 0070             setPinOutput@bitmask 0078  
                    __pmaintext 0019               setPinOutput@level 0073                      __pintentry 0004  
                ??_setPinOutput 0074                         __ptext1 00D1                         __ptext2 00FD  
                       __ptext3 0069                         __ptext4 010B                         __ptext5 009D  
                       __ptext6 00EC                togglePin@bitmask 0077            end_of_initialization 0015  
     configurePinDirection@port 0077               __end_of_togglePin 00EC                   ?_setup_timer0 0070  
 __end_of_configurePinDirection 00D1               _enable_interrupts 010B                  ??_setup_timer0 0072  
          __end_of_setPinOutput 009D              ?_enable_interrupts 0070             start_initialization 000F  
           ??_enable_interrupts 0072                   _secondsPassed 007A       __end_of_enable_interrupts 010E  
                   __pbssCOMMON 0079                       ___latbits 0002                   __pcstackBANK0 0022  
              setPinOutput@port 0077               interrupt_function 0004                  _timerTriggered 0079  
          __end_of_setup_timer0 010B                       _togglePin 00D1  configurePinDirection@direction 0073  
                  _setPinOutput 0069                      ?_togglePin 0072                _interruptHandler 00EC  
               setPinOutput@pin 0072           _configurePinDirection 009D                        _timerCnt 0020  
                      main@port 0023                      _INTCONbits 000B                        intlevel1 0000  
      configurePinDirection@pin 0072                     ??_togglePin 0073                      _OPTION_REG 0081  
                  _setup_timer0 00FD          ?_configurePinDirection 0072  
